from copy import deepcopy

from spacy import util
from spacy.language import Language
from spacy.lang.ja import resolve_pos
from spacy.tokens import Doc, MorphAnalysis, Span, Token


__all__ = [
    "LuwXposTagger",
]


@Language.factory(
    "luw_xpos_tagger",
    requires=["token.tag", "token.pos"],
    assigns=["token.tag"],
    retokenizes=False,
    default_config={},
)
def make_luw_xpos_tagger(
    nlp: Language,
    name: str,
):
    return LuwXposTagger(
        nlp.vocab,
    )


class LuwXposTagger:
    def __init__(self, vocab):
        self.vocab = vocab

    def __call__(self, doc: Doc):
        def lemmatize(t):
            if t.norm_ in NORMALIZE_MAP:
                return NORMALIZE_MAP[t.norm_]
            elif "助数詞" in t.tag_ and t.norm_ in NUM_UNIT_MAP:
                return NUM_UNIT_MAP[t.norm_]
            elif t.norm_ in NUM_STR_MAP:
                return NUM_STR_MAP[t.norm_]
            lemma = t.norm_
            for suffix, v in NUM_SUFFIX_MAP.items():
                if lemma.endswith(suffix):
                    lemma = lemma[:-len(suffix)] + v
                    break
            return "".join(LEMMA_CHAR_MAP.get(c, c) for c in lemma)

        prev_tag = None
        for t in doc:
            inf = t.morph.get("Inflection")
            if inf:
                inf_str = inf[0].split(";")[0]
                t.tag_ =  f"{t.tag_}-{inf_str}"

            lemma = None
            if t.dep_ == "subtok":
                for prefix in DISABLE_SUBTOK_NORMALIZE_XPOS:
                    if t.tag_.startswith(prefix):
                        lemma = t.orth_
                        break
            else:
                if prev_tag:
                    lemma = LAST_SUW_NORMALIZE_MAP.get(t.norm_)
                else:
                    lemma = SINGLE_NORMALIZE_MAP.get(t.norm_)
            if lemma:
                t.lemma_ = lemma 
            else:
                t.lemma_ = lemmatize(t)

            if t.dep_ == "subtok":
                prev_tag = t.tag_
                continue
            prev_xpos = prev_tag
            prev_tag = None
            for rules in (
                [
                    LAST_SUW_XPOS_TO_LUW_XPOS_RECOVERY,
                    LAST_SUW_XPOS_TO_LUW_XPOS_BASE,
                    SUW_XPOS_TO_LUW_XPOS_RECOVERY,
                    SUW_XPOS_TO_LUW_XPOS_BASE,
                ] if prev_xpos else [
                    SUW_XPOS_TO_LUW_XPOS_RECOVERY,
                    SUW_XPOS_TO_LUW_XPOS_BASE,
                ]
            ):
                upos_cond = rules.get(t.tag_)
                if upos_cond:
                    if isinstance(upos_cond, str):
                        t.tag_ = upos_cond
                        break
                    lemma_cond = upos_cond.get(t.pos_)
                    if lemma_cond:
                        if isinstance(lemma_cond, str):
                            t.tag_ = lemma_cond
                            break
                        luw_xpos = lemma_cond.get(t.lemma_)
                        if luw_xpos:
                            t.tag_ = luw_xpos
                            break
                        elif None in lemma_cond:
                            t.tag_ = lemma_cond[None]
                            break
                    elif None in upos_cond:
                        t.tag_ = upos_cond[None]
                        break
            else:
                if t.ent_iob_ in "BILU":
                    upos_cond = NE_LUW_UPOS_PREV_XPOS_TO_LUW_XPOS.get(t.ent_type_)
                    if upos_cond:
                        if isinstance(upos_cond, str):
                            t.tag_ = upos_cond
                            continue
                        prev_xpos_cond = upos_cond.get(t.pos_, upos_cond.get(None))
                        if prev_xpos_cond:
                            if isinstance(prev_xpos_cond, str):
                                t.tag_ = prev_xpos_cond
                                continue
                            luw_xpos = prev_xpos_cond.get(prev_xpos)
                            if luw_xpos:
                                t.tag_ = luw_xpos
                                continue
                            if None in prev_xpos_cond:
                                t.tag_ = prev_xpos_cond.get(None, t.tag_)
                                continue
                if t.pos_ in LUW_UPOS_TO_LUW_XPOS:
                    t.tag_ = LUW_UPOS_TO_LUW_XPOS[t.pos_]
                else:
                    for xpos_cond in (
                        [
                            LAST_SUW_XPOS_TO_LUW_XPOS_FALLBACK,
                            SUW_XPOS_TO_LUW_XPOS_FALLBACK,
                        ] if prev_xpos else [
                            SUW_XPOS_TO_LUW_XPOS_FALLBACK,
                        ]
                    ):
                        if t.tag_ in xpos_cond:
                            t.tag_ = xpos_cond[t.tag_]
                            break
        return doc

    def to_bytes(self, **_kwargs):
        serializers = {}
        return util.to_bytes(serializers, [])

    def from_bytes(self, data, **_kwargs):
        return self

    def to_disk(self, path, **_kwargs):
        path = util.ensure_path(path)
        serializers = {}
        return util.to_disk(path, serializers, [])

    def from_disk(self, path, **_kwargs):
        pass


SUW_XPOS_TO_LUW_XPOS_FALLBACK = {
    "動詞-非自立可能-カ行変格": "動詞-一般-カ行変格",
    "動詞-非自立可能-サ行変格": "動詞-一般-サ行変格",
    "動詞-非自立可能-上一段-ア行": "動詞-一般-上一段-ア行",
    "動詞-非自立可能-上一段-カ行": "動詞-一般-上一段-カ行",
    "動詞-非自立可能-上一段-ガ行": "動詞-一般-上一段-ガ行",
    "動詞-非自立可能-上一段-マ行": "動詞-一般-上一段-マ行",
    "動詞-非自立可能-下一段-ア行": "動詞-一般-下一段-ア行",
    "動詞-非自立可能-下一段-カ行": "動詞-一般-下一段-カ行",
    "動詞-非自立可能-下一段-ガ行": "動詞-一般-下一段-ガ行",
    "動詞-非自立可能-下一段-サ行": "動詞-一般-下一段-サ行",
    "動詞-非自立可能-下一段-タ行": "動詞-一般-下一段-タ行",
    "動詞-非自立可能-下一段-マ行": "動詞-一般-下一段-マ行",
    "動詞-非自立可能-下一段-ラ行": "動詞-一般-下一段-ラ行",
    "動詞-非自立可能-五段-カ行": "動詞-一般-五段-カ行",
    "動詞-非自立可能-五段-サ行": "動詞-一般-五段-サ行",
    "動詞-非自立可能-五段-マ行": "動詞-一般-五段-マ行",
    "動詞-非自立可能-五段-ラ行": "動詞-一般-五段-ラ行",
    "動詞-非自立可能-五段-ワア行": "動詞-一般-五段-ワア行",
    "動詞-非自立可能-文語サ行変格": "動詞-一般-文語サ行変格",
    "動詞-非自立可能-文語ラ行変格": "動詞-一般-文語ラ行変格",
    "動詞-非自立可能-文語上一段-マ行": "動詞-一般-文語上一段-マ行",
    "動詞-非自立可能-文語下二段-ア行": "動詞-一般-文語下二段-ア行",
    "動詞-非自立可能-文語下二段-タ行": "動詞-一般-文語下二段-タ行",
    "動詞-非自立可能-文語下二段-ラ行": "動詞-一般-文語下二段-ラ行",
    "動詞-非自立可能-文語四段-サ行": "動詞-一般-文語四段-サ行",
    "動詞-非自立可能-文語四段-ハ行": "動詞-一般-文語四段-ハ行",
    "動詞-非自立可能-文語四段-ラ行": "動詞-一般-文語四段-ラ行",
    "名詞-普通名詞-サ変可能": "名詞-普通名詞-一般",
    "名詞-普通名詞-サ変形状詞可能": "名詞-普通名詞-一般",
    "名詞-普通名詞-副詞可能": "名詞-普通名詞-一般",
    "名詞-普通名詞-助数詞可能": "名詞-普通名詞-一般",
    "名詞-普通名詞-形状詞可能": "形状詞-一般",
    "形容詞-非自立可能-形容詞": "形容詞-一般-形容詞",

    # error recovery
    "形容詞-非自立可能-文語形容詞-ク": "形容詞-一般-形容詞",

    # out of luw corpora
    "接尾辞-形容詞的-文語形容詞-シク": "接尾辞-形容詞的-文語形容詞-シク",
}

LAST_SUW_XPOS_TO_LUW_XPOS_FALLBACK = {
    "接尾辞-名詞的-サ変可能": "名詞-普通名詞-一般",
    "接尾辞-名詞的-副詞可能": "接尾辞-名詞的-一般",
    "接尾辞-形状詞的": "形状詞-一般",
}

LUW_UPOS_TO_LUW_XPOS = {
    "ADJ": "形状詞-一般",
    "ADV": "副詞",
    "CCONJ": "接続詞",
    "DET": "連体詞",
    "INTJ": "感動詞-一般",
    "NOUN": "名詞-普通名詞-一般",
    "NUM": "名詞-数詞",
    "PRON": "代名詞",
    "SYM": "補助記号-一般",
}

NE_LUW_UPOS_PREV_XPOS_TO_LUW_XPOS = {
    "GPE": {"NOUN": "名詞-普通名詞-一般", None: "名詞-固有名詞-地名-一般"},
    "LOC": {"NOUN": "名詞-普通名詞-一般", None: "名詞-固有名詞-地名-一般"},
    "NORP": {"NOUN": "名詞-普通名詞-一般", None: "名詞-固有名詞-一般"},
    "ORG": {"NOUN": "名詞-普通名詞-一般", None: "名詞-固有名詞-一般"},
    "MONEY": {"ADV": "副詞", "NOUN": "名詞-普通名詞-一般", None: "名詞-数詞"},
    "PERCENT": {"ADV": "副詞", "NOUN": "名詞-普通名詞-一般", None: "名詞-数詞"},
    "PERSON": {None: {"名詞-固有名詞-人名-姓": "名詞-固有名詞-人名-姓", None: "名詞-固有名詞-人名-一般"}},
    "TITLE_AFFIX": {None: {"名詞-固有名詞-人名-姓": "名詞-固有名詞-人名-姓", None: "名詞-固有名詞-人名-一般"}},
    "PET_NAME": "名詞-固有名詞-一般",
}

SUW_XPOS_TO_LUW_XPOS_BASE = {
    # LUW=SUW

    # for gold tokens only
    "URL": {"X": "URL"},
    "web誤脱": {"X": "web誤脱"},
    "未知語": {"X": "未知語"},
    "漢文": {"X": "漢文"},
    "絵文字・記号等": {"SYM": "補助記号-ＡＡ-顔文字"},
    "英単語": {"NOUN": "英単語"},
    "言いよどみ": {"X": "言いよどみ"},

    # working rules
    "助詞-係助詞": {"ADP": "助詞-係助詞", "SCONJ": "助詞-接続助詞"},
    "助詞-副助詞": {"ADP": "助詞-副助詞", "PART": "助詞-副助詞"},
    "助詞-接続助詞": {"ADP": "助詞-格助詞"},
    "助詞-格助詞": {"ADP": "助詞-格助詞"},
    "助詞-準体助詞": {"ADP": "助詞-格助詞", "PART": "助詞-終助詞", "SCONJ": "助詞-準体助詞"},
    "助詞-終助詞": {"PART": "助詞-終助詞"},
    "名詞-助動詞語幹": {"AUX": "名詞-助動詞語幹"},
    "名詞-固有名詞-一般": {"PROPN": "名詞-固有名詞-一般"},
    "名詞-固有名詞-人名-一般": {"PROPN": "名詞-固有名詞-人名-一般"},
    "名詞-固有名詞-人名-名": {"PROPN": "名詞-固有名詞-人名-名"},
    "名詞-固有名詞-人名-姓": {"PROPN": "名詞-固有名詞-人名-姓"},
    "名詞-固有名詞-地名-一般": {"PROPN": "名詞-固有名詞-地名-一般"},
    "名詞-固有名詞-地名-国": {"PROPN": "名詞-固有名詞-地名-国"},
    "形容詞-一般-形容詞": {"ADJ": "形容詞-一般-形容詞"},
    "形容詞-一般-文語形容詞-ク": "形容詞-一般-文語形容詞-ク",
    "形容詞-一般-文語形容詞-シク": "形容詞-一般-文語形容詞-シク",
    "形容詞-非自立可能-形容詞": {"ADJ": "形容詞-一般-形容詞",},
    "形容詞-非自立可能-文語形容詞-ク": {"ADJ": "形容詞-一般-文語形容詞-ク"},
    "形状詞-タリ": {"ADJ": "形状詞-タリ"},
    "形状詞-一般": {"ADJ": "形状詞-一般", "PRON": "連体詞"},
    "形状詞-助動詞語幹": {"AUX": "形状詞-助動詞語幹", "NOUN": "形状詞-助動詞語幹"},
    "感動詞-フィラー": {"INTJ": "感動詞-フィラー"},
    "接続詞": {"ADP": {"て": "助詞-副助詞", None: "助詞-格助詞"}, "AUX": "助動詞-助動詞-ダ"},
    "接頭辞": {"NOUN": "接頭辞"},
    "補助記号-ＡＡ-一般": {"SYM": "補助記号-ＡＡ-一般"},
    "補助記号-ＡＡ-顔文字": {"SYM": "補助記号-ＡＡ-顔文字"},
    "補助記号-一般": {"ADP": "助詞-格助詞"},
    "補助記号-句点": {"PUNCT": "補助記号-句点", None: "補助記号-句点"},
    "補助記号-括弧閉": {"PUNCT": "補助記号-括弧閉"},
    "補助記号-括弧開": {"PUNCT": "補助記号-括弧開"},
    "補助記号-読点": {"PUNCT": "補助記号-読点"},
    "記号-文字": {"NOUN": "記号-文字"},
    "連体詞": {"ADJ": "連体詞", "INTJ": "感動詞-フィラー", "PRON": "連体詞", "VERB": "動詞-一般-五段-ラ行"},

    # out of LUW corpora
    "動詞-一般-上一段-ハ行": {"VERB": "動詞-一般-上一段-ハ行"},
    "動詞-一般-下一段-ラ行-呉レル": {"VERB": "動詞-一般-下一段-ラ行-呉レル"},
    "動詞-一般-文語四段-バ行": {"VERB": "動詞-一般-文語四段-バ行"},
    "動詞-一般-文語上二段-ア行": {"VERB": "動詞-一般-文語上二段-ア行"},
    "動詞-一般-文語上二段-カ行": {"VERB": "動詞-一般-文語上二段-カ行"},
    "動詞-一般-文語上二段-ガ行": {"VERB": "動詞-一般-文語上二段-ガ行"},
    "動詞-一般-文語上二段-タ行": {"VERB": "動詞-一般-文語上二段-タ行"},
    "動詞-一般-文語上二段-マ行": {"VERB": "動詞-一般-文語上二段-マ行"},
    "動詞-一般-文語上二段-ヤ行": {"VERB": "動詞-一般-文語上二段-ヤ行"},
    "動詞-一般-文語上二段-ラ行": {"VERB": "動詞-一般-文語上二段-ラ行"},
    "動詞-一般-文語下二段-サ行": {"VERB": "動詞-一般-文語下二段-サ行"},
    "動詞-一般-文語下二段-ザ行": {"VERB": "動詞-一般-文語下二段-ザ行"},
    "動詞-一般-文語下二段-バ行": {"VERB": "動詞-一般-文語下二段-バ行"},
    "動詞-一般-文語下二段-ワ行": {"VERB": "動詞-一般-文語下二段-ワ行"},
    "動詞-一般-文語ナ行変格": {"VERB": "動詞-一般-文語ナ行変格"},
    "助動詞-助動詞-ドス": {"AUX": "助動詞-助動詞-ドス"},
    "助動詞-文語助動詞-ケム": {"AUX": "助動詞-文語助動詞-ケム"},
    "助動詞-文語助動詞-コス": {"AUX": "助動詞-文語助動詞-コス"},
    "助動詞-文語助動詞-ザマス": {"AUX": "助動詞-文語助動詞-ザマス"},
    "助動詞-文語助動詞-ザンス": {"AUX": "助動詞-文語助動詞-ザンス"},
    "助動詞-文語助動詞-ツ": {"AUX": "助動詞-文語助動詞-ツ"},
    "助動詞-文語助動詞-マシ": {"AUX": "助動詞-文語助動詞-マシ"},
    "助動詞-文語助動詞-ムズ": {"AUX": "助動詞-文語助動詞-ムズ"},
    "助動詞-文語助動詞-メリ": {"AUX": "助動詞-文語助動詞-メリ"},
    "助動詞-文語助動詞-ラム": {"AUX": "助動詞-文語助動詞-ラム"},
    "助動詞-文語助動詞-ンス": {"AUX": "助動詞-文語助動詞-ンス"},
    "助動詞-文語形容詞-シク": {"AUX": "助動詞-文語形容詞-シク"},
}

SUW_XPOS_TO_LUW_XPOS_RECOVERY = {
    "助動詞-助動詞-ダ": {"ADP": "助詞-格助詞"},
    "助詞-副助詞": {"AUX": {"や": "助動詞-助動詞-ヤ", None: "助動詞-五段-ワア行"}},
    "助詞-格助詞": {"AUX": "助動詞-助動詞-ダ", "SCONJ": "助詞-接続助詞"},
    "助詞-準体助詞": {"ADP": "助詞-格助詞", "PART": "助詞-終助詞"},
    "助詞-終助詞": {"ADP": {"わ": "助詞-係助詞", "ゎ": "助詞-係助詞", None: "助詞-副助詞"}, "SCONJ": "助詞-準体助詞"},
    "動詞-一般-五段-ラ行": {"VERB": {"通う": "動詞-一般-五段-ワア行", "そう": "動詞-一般-五段-ワア行", "つかう": "動詞-一般-五段-ワア行", "ぬう": "動詞-一般-五段-ワア行"}},
    "動詞-一般-文語四段-ハ行": {"VERB": {"いう": "動詞-一般-五段-ワア行", "いふ": "動詞-一般-五段-ワア行", "思ふ": "動詞-一般-五段-ワア行"}},
    "動詞-非自立可能-五段-ラ行": {"AUX": {"やる": "助動詞-助動詞-ヤ", "なる": "助動詞-文語助動詞-ナリ-断定"}},
    "名詞-普通名詞-副詞可能": {"ADJ": {"近く": "形容詞-一般-形容詞", None: "形状詞-一般"}, "ADP": "助詞-副助詞", "PART": "助詞-副助詞", "VERB": "動詞-一般-五段-ラ行"},
    "接尾辞-名詞的-一般": {"ADP": "助詞-副助詞"},
    "補助記号-一般": {"PUNCT": "補助記号-句点"},
    "補助記号-句点": {"SYM": "補助記号-一般"},
}

LAST_SUW_XPOS_TO_LUW_XPOS_BASE = {
    # LUW>SUW

    # for gold tokens only
    "ローマ字文": {"X": "ローマ字文"},
    "外国語": {"NOUN": "名詞-普通名詞-一般", "PROPN": "名詞-固有名詞-一般"},
    "補助記号-ＡＡ-一般": {"SYM": "補助記号-ＡＡ-顔文字"},
    "助動詞-文語助動詞-リ": {"AUX": "助詞-格助詞"},

    # working rules
    "助動詞-助動詞-タ": {"ADP": "助詞-格助詞", "SCONJ": "助詞-接続助詞"},
    "助動詞-助動詞-ヌ": {"ADP": "助詞-副助詞", "PART": "助詞-副助詞"},
    "助動詞-文語助動詞-タリ-断定": {"ADJ": "連体詞"},
    "助動詞-文語助動詞-リ": {"ADP": "助詞-格助詞"},
    "助詞-係助詞": {"SCONJ": "助詞-接続助詞"},
    "助詞-副助詞": {"ADP": {"まで": "助詞-格助詞", None: "助詞-副助詞"}, "SCONJ": "助詞-接続助詞"},
    "動詞-一般-サ行変格": {"ADP": {"かんする": "助詞-格助詞", "たいする": "助詞-格助詞", "対する": "助詞-格助詞", "関する": "助詞-格助詞", "際する": "助詞-格助詞"}},
    "動詞-一般-下一段-ラ行": {"SCONJ": "助詞-接続助詞"},
    "動詞-一般-五段-カ行": {"ADP": "助詞-格助詞"},
    "動詞-一般-五段-ラ行": {"ADP": "助詞-格助詞", "VERB": {"よる": "助詞-格助詞"}},
    "動詞-一般-五段-ワア行": {"ADP": "助詞-格助詞", "SCONJ": "助詞-接続助詞"},
    "動詞-一般-文語四段-ハ行": {"ADP": "助詞-格助詞", "SCONJ": "助詞-接続助詞"},
    "動詞-非自立可能-カ行変格": {"SCONJ": "助動詞-カ行変格"},
    "動詞-非自立可能-サ行変格": {"SCONJ": "助詞-接続助詞"},
    "動詞-非自立可能-上一段-ア行": {"SCONJ": "助動詞-上一段-ア行"},
    "動詞-非自立可能-上一段-マ行": {"SCONJ": "助動詞-上一段-マ行"},
    "動詞-非自立可能-下一段-ア行": {"SCONJ": "助動詞-下一段-ア行"},
    "動詞-非自立可能-下一段-カ行": {"SCONJ": "助動詞-下一段-カ行"},
    "動詞-非自立可能-下一段-マ行": {"ADP": "助詞-格助詞"},
    "動詞-非自立可能-下一段-ラ行": {"SCONJ": "助動詞-下一段-ラ行"},
    "動詞-非自立可能-五段-カ行": {"ADP": "助詞-格助詞", "SCONJ": "助動詞-五段-カ行"},
    "動詞-非自立可能-五段-ラ行": {"ADP": "助詞-格助詞", "SCONJ": "助動詞-五段-ラ行", "VERB": {"ある": "助動詞-五段-ラ行", "有る": "助動詞-五段-ラ行", "なる": "助動詞-五段-ラ行"}},
    "動詞-非自立可能-五段-ワア行": {"SCONJ": "助動詞-五段-ワア行"},
    "名詞-普通名詞-副詞可能": {"SCONJ": "助詞-接続助詞"},
    "形容詞-非自立可能-形容詞": {"AUX": "助動詞-形容詞"},
    "形容詞-非自立可能-文語形容詞-ク": {"SCONJ": "助動詞-文語形容詞-ク"},
    "接尾辞-動詞的-上一段-マ行": {"VERB": "動詞-一般-上一段-マ行"},
    "接尾辞-動詞的-下一段-ナ行": {"VERB": "動詞-一般-下一段-ナ行"},
    "接尾辞-動詞的-五段-カ行": {"VERB": "動詞-一般-五段-カ行"},
    "接尾辞-動詞的-五段-サ行": {"VERB": "動詞-一般-五段-サ行"},
    "接尾辞-動詞的-五段-マ行": {"VERB": "動詞-一般-五段-マ行"},
    "接尾辞-動詞的-五段-ラ行": {"VERB": "動詞-一般-五段-ラ行"},
    "接尾辞-名詞的-助数詞": {"NOUN": "名詞-数詞"},
    "接尾辞-形容詞的-形容詞": {"ADJ": "形容詞-一般-形容詞"},
}

LAST_SUW_XPOS_TO_LUW_XPOS_RECOVERY = {
    "形容詞-非自立可能-形容詞": {"ADP": "助詞-副助詞", "PART": "助詞-副助詞"},

    # no effect in ja_gsd-ud-dev
    "副詞": {"ADJ": {"ごい": "形容詞-一般-形容詞", "たっぷり": "形状詞-一般", "依然": "形状詞-一般", "ど〜": "助詞-副助詞", "より": "助詞-格助詞", None: "形容詞-一般-形容詞"}},
    "助動詞-五段-ワア行": {"VERB": "動詞-一般-五段-ラ行"},
    "助動詞-助動詞-ジャ": {"ADP": "助詞-格助詞", "SCONJ": "助動詞-助動詞-ダ"},
    "助動詞-助動詞-ダ": {"ADP": "助詞-格助詞", "PART": "助詞-終助詞"},
    "助動詞-助動詞-ドス": {"VERB": "動詞-一般-五段-サ行"},
    "助動詞-助動詞-ナイ": {"ADJ": "形容詞-一般-形容詞", "PART": "助詞-終助詞"},
    "助動詞-助動詞-ヌ": {"AUX": "助動詞-文語助動詞-ヌ"},
    "助動詞-助動詞-ヤ": {"ADP": "助詞-副助詞", "VERB": "動詞-一般-五段-ラ行"},
    "助動詞-助動詞-ラシイ": {"ADJ": "形容詞-一般-形容詞"},
    "助動詞-文語下二段-ラ行": {"VERB": "動詞-一般-カ行変格"},
    "助動詞-文語助動詞-タリ-断定": {"VERB": "動詞-一般-五段-ラ行"},
    "助動詞-文語助動詞-ム": {"SCONJ": "助動詞-助動詞-ヌ"},
    "動詞-非自立可能-文語ラ行変格": {"SCONJ": "助動詞-五段-ラ行"},
    "名詞-普通名詞-サ変可能": {"PART": "助詞-終助詞"},
    "名詞-普通名詞-一般": {"ADP": "助詞-格助詞", "PART": "助詞-終助詞"},
    "形容詞-一般-形容詞": {"VERB": "動詞-一般-五段-ラ行"},
    "形状詞-一般": {"PRON": "連体詞"},
    "感動詞-一般": {"PART": "助詞-終助詞", "VERB": "動詞-一般-五段-ラ行"},
    "接尾辞-名詞的-助数詞": {"SYM": "補助記号-一般"},
    "接尾辞-形容詞的-形容詞": {"AUX": "助動詞-助動詞-ラシイ"},
}

NORMALIZE_MAP = {
    "為る": "する",
    "こと": "事",
    "つき": "付き",
    "いずれ": "何れ",
    "ただし": "但し",
}

SINGLE_NORMALIZE_MAP = {
    "有る": "ある",
    "居る": "いる",
    "得る": "える",
    "成る": "なる",
    "見る": "みる",
    "出来る": "できる",
    "です": "だ",
    "良い": "よい",
    "無い": "ない",
    "ここ": "此処",
    "そこ": "其処",
    "どこ": "何処",
    "あそこ": "彼処",
    "あれ": "彼れ",
    "これ": "此れ",
    "それ": "其れ",
    "どれ": "何れ",
    "ため": "為",
    "とも": "共",
    "また": "又",
    "！": "!",
    "？": "?",
    "−": "-",
    "＊": "*",
}

LAST_SUW_NORMALIZE_MAP = {
    "よる": "因る",
    "おる": "居る",
}

DISABLE_SUBTOK_NORMALIZE_XPOS = [
    "助動詞",
    "動詞",
    "形容詞",
]

NUM_STR_MAP = {
    "１００": "百",
    "２００": "二百",
    "３００": "三百",
    "４００": "四百",
    "５００": "五百",
    "６００": "六百",
    "７００": "七百",
    "８００": "八百",
    "９００": "九百",
    "１０": "十",
    "２０": "二十",
    "３０": "三十",
    "４０": "四十",
    "５０": "五十",
    "６０": "六十",
    "７０": "七十",
    "８０": "八十",
    "９０": "九十",
    "100": "百",
    "200": "二百",
    "300": "三百",
    "400": "四百",
    "500": "五百",
    "600": "六百",
    "700": "七百",
    "800": "八百",
    "900": "九百",
    "10": "十",
    "20": "二十",
    "30": "三十",
    "40": "四十",
    "50": "五十",
    "60": "六十",
    "70": "七十",
    "80": "八十",
    "90": "九十",
}

NUM_UNIT_MAP = {
    "%": "パーセント",
    "％": "パーセント",
    "m": "メートル",
    "ｍ": "メートル",
    "cm": "センチミリメートル",
    "ｃｍ": "センチミリメートル",
    "mm": "ミリメートル",
    "ｍｍ": "ミリメートル",
}

NUM_SUFFIX_MAP = {
    "00000000": "億",
    "００００００００": "億",
    "0000": "万",
    "００００": "万",
}

LEMMA_CHAR_MAP = {
    s: d for s, d in zip(
        "ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789１２３４５６７８９",
        "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ一二三四五六七八九一二三四五六七八九",
    ) 
}
LEMMA_CHAR_MAP["0"] = "ゼロ"
LEMMA_CHAR_MAP["０"] = "ゼロ"
